// <auto-generated />
using System;
using Cartax.Presentation;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cartax.Presentation.Migrations
{
    [DbContext(typeof(CarTaxContext))]
    [Migration("20230912053220_CarTax0")]
    partial class CarTax0
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cartax.Domain.Entites.Areas.Area", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("AreaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Area");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaCode = "1",
                            AreaName = "Gothenburِ"
                        },
                        new
                        {
                            Id = 2,
                            AreaCode = "2",
                            AreaName = "GothenburgA"
                        },
                        new
                        {
                            Id = 3,
                            AreaCode = "3",
                            AreaName = "GothenburgB"
                        },
                        new
                        {
                            Id = 4,
                            AreaCode = "4",
                            AreaName = "GothenburgC"
                        });
                });

            modelBuilder.Entity("Cartax.Domain.Entites.CarTypes.CarType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idcity")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CarType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarName = "Normal",
                            Idcity = 1,
                            IsActive = true,
                            IsTaxActive = true
                        },
                        new
                        {
                            Id = 2,
                            CarName = "Emergency",
                            Idcity = 1,
                            IsActive = true,
                            IsTaxActive = false
                        },
                        new
                        {
                            Id = 3,
                            CarName = "Busses",
                            Idcity = 1,
                            IsActive = true,
                            IsTaxActive = false
                        },
                        new
                        {
                            Id = 4,
                            CarName = "Diplomat",
                            Idcity = 1,
                            IsActive = true,
                            IsTaxActive = false
                        },
                        new
                        {
                            Id = 5,
                            CarName = "Motorcycles",
                            Idcity = 1,
                            IsActive = true,
                            IsTaxActive = false
                        },
                        new
                        {
                            Id = 6,
                            CarName = "Military",
                            Idcity = 1,
                            IsActive = true,
                            IsTaxActive = false
                        },
                        new
                        {
                            Id = 7,
                            CarName = "Foreign",
                            Idcity = 1,
                            IsActive = true,
                            IsTaxActive = false
                        });
                });

            modelBuilder.Entity("Cartax.Domain.Entites.Cars.Car", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCarType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Car");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarName = "Car.A",
                            IdCarType = 1
                        },
                        new
                        {
                            Id = 2,
                            CarName = "Car.B",
                            IdCarType = 2
                        },
                        new
                        {
                            Id = 3,
                            CarName = "Car.C",
                            IdCarType = 3
                        },
                        new
                        {
                            Id = 4,
                            CarName = "Car.D",
                            IdCarType = 4
                        },
                        new
                        {
                            Id = 5,
                            CarName = "Car.F",
                            IdCarType = 5
                        },
                        new
                        {
                            Id = 6,
                            CarName = "Car.H",
                            IdCarType = 6
                        },
                        new
                        {
                            Id = 7,
                            CarName = "Car.X",
                            IdCarType = 7
                        });
                });

            modelBuilder.Entity("Cartax.Domain.Entites.Citys.City", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("CityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityCode = "FitNet10",
                            CityName = "Gothenburg"
                        },
                        new
                        {
                            Id = 2,
                            CityCode = "FitNet45",
                            CityName = "Eroica"
                        },
                        new
                        {
                            Id = 3,
                            CityCode = "FitNet48",
                            CityName = "Avesta"
                        });
                });

            modelBuilder.Entity("Cartax.Domain.Entites.Tax.TaxCars.TaxCar", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Idarea")
                        .HasColumnType("int");

                    b.Property<int?>("Idcar")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("TaxCar");
                });

            modelBuilder.Entity("Cartax.Domain.Entites.Tax.TaxLimitDays.TaxLimitDay", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("TaxLimitDay");
                });

            modelBuilder.Entity("Cartax.Domain.Entites.Tax.TaxLimitMoneyDays.TaxLimitMoneyDay", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("IdArea")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("TaxLimitMoneyDay");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdArea = 1,
                            Tax = 60m
                        });
                });

            modelBuilder.Entity("Cartax.Domain.Entites.Tax.TaxLimitTimes.TaxLimitTime", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("TaxLimitTime");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Time = new TimeSpan(0, 1, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("Cartax.Domain.Entites.Tax.TaxLongTerms.TaxTaxLongTerm", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("DayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DayStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdArea")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaxTaxLongTerm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayEnd = new DateTime(2013, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayStart = new DateTime(2013, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdArea = 1
                        });
                });

            modelBuilder.Entity("Cartax.Domain.Entites.Tax.TaxPublicholidays.TaxPublicholiday", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("Day")
                        .HasColumnType("Date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TaxPublicholiday");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Day = new DateTime(2023, 9, 14, 9, 2, 20, 78, DateTimeKind.Local).AddTicks(9287),
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Cartax.Domain.Entites.Tax.TaxTimes.TaxTime", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<TimeSpan?>("EndDate")
                        .HasColumnType("time");

                    b.Property<int?>("Idarea")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("StartDate")
                        .HasColumnType("time");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("TaxTime");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new TimeSpan(0, 6, 29, 0, 0),
                            Idarea = 1,
                            StartDate = new TimeSpan(0, 6, 0, 0, 0),
                            Tax = 8m
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new TimeSpan(0, 6, 59, 0, 0),
                            Idarea = 1,
                            StartDate = new TimeSpan(0, 6, 30, 0, 0),
                            Tax = 13m
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new TimeSpan(0, 7, 59, 0, 0),
                            Idarea = 1,
                            StartDate = new TimeSpan(0, 7, 0, 0, 0),
                            Tax = 18m
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new TimeSpan(0, 8, 29, 0, 0),
                            Idarea = 1,
                            StartDate = new TimeSpan(0, 8, 0, 0, 0),
                            Tax = 13m
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new TimeSpan(0, 14, 59, 0, 0),
                            Idarea = 1,
                            StartDate = new TimeSpan(0, 8, 30, 0, 0),
                            Tax = 18m
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new TimeSpan(0, 15, 29, 0, 0),
                            Idarea = 1,
                            StartDate = new TimeSpan(0, 15, 0, 0, 0),
                            Tax = 13m
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new TimeSpan(0, 16, 59, 0, 0),
                            Idarea = 1,
                            StartDate = new TimeSpan(0, 15, 30, 0, 0),
                            Tax = 18m
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new TimeSpan(0, 17, 59, 0, 0),
                            Idarea = 1,
                            StartDate = new TimeSpan(0, 17, 0, 0, 0),
                            Tax = 13m
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new TimeSpan(0, 18, 29, 0, 0),
                            Idarea = 1,
                            StartDate = new TimeSpan(0, 18, 0, 0, 0),
                            Tax = 8m
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new TimeSpan(1, 0, 0, 0, 0),
                            Idarea = 1,
                            StartDate = new TimeSpan(0, 18, 30, 0, 0),
                            Tax = 8m
                        },
                        new
                        {
                            Id = 11,
                            EndDate = new TimeSpan(0, 5, 59, 0, 0),
                            Idarea = 1,
                            StartDate = new TimeSpan(0, 0, 0, 0, 0),
                            Tax = 8m
                        });
                });

            modelBuilder.Entity("Cartax.Domain.Entites.Tax.TaxWeekDays.TaxWeekDay", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("DatyTyps")
                        .HasColumnType("int");

                    b.Property<int>("IdArea")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("TaxDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaxWeekDay");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatyTyps = 6,
                            IdArea = 1,
                            IsActive = true,
                            TaxDays = 10
                        },
                        new
                        {
                            Id = 2,
                            DatyTyps = 7,
                            IdArea = 1,
                            IsActive = true,
                            TaxDays = 10
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
